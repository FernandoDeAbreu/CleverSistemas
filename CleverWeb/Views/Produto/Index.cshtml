@model PaginatedList<CleverWeb.Models.ProdutoServico>

@{
    ViewData["Title"] = "Index";
}
<div class="pagetitle">
    <h3>Produtos cadastrados</h3>
</div>


<form asp-action="Index" method="get" class="card" style="margin-bottom: 20px; padding-left: 5px; padding-right: 5px">
    <div class="mb-3 mt-3 no-color ">
        <label for="text" class="form-label">Paramentros da pesquisa:</label>
        <input type="text" class="form-control" name="SearchString" value="@ViewData["CurrentFilter"]" />
    </div>
    <div class="col-md-12 d-flex justify-content-end" style="margin-bottom: 20px">
        <input type="submit" value="Pesquisar" class="btn btn-primary justify-end" />
        <a class="btn btn-primary justify-end" style="margin-left: 5px; margin-right: 5px" asp-action="Index">Listar todos</a>
        <a class="btn btn-primary justify-end" asp-action="Create">Novo</a>
    </div>
</form>




<table class="table table-striped table-bordered table-hover">
    <thead class="table-primary">
        <tr>
            <th>
                Código
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DescricaoParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Descrição</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ReferenciaParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Referência</a>
            </th>
            <th>
                Fabricante
            </th>
            <th class="text-center">
                Ações
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descricao)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Referencia)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fabricante)
                </td>

                <td class="text-center">
                    <a asp-action="Edit" class="btn btn-primary bi bi-pencil-square btn-sm" asp-route-id="@item.Id"></a>
                    <a asp-action="Details" class="btn btn-secondary bi bi-eye btn-sm" asp-route-id="@item.Id"></a>
                    <a asp-action="Delete" class="btn btn-danger bi bi-trash3 btn-sm" asp-route-id="@item.Id"></a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<ul class="pagination justify-content-end" style="margin:20px 0">

    @if (Model.PageIndex > 1)
    {
        <li class="page-item">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link @prevDisabled">
                Anterior
            </a>
        </li>
    }

    @for (var i = 1; i <= Model.TotalPages; i++)
    {
        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@i"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link">
                @i
            </a>
        </li>
    }

    @if (Model.PageIndex < Model.TotalPages)
    {
        <li class="page-item">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link @nextDisabled">
                Próximo
            </a>
        </li>
    }

</ul>